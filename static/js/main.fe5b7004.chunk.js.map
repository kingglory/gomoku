{"version":3,"sources":["index.js"],"names":["canvas","document","querySelector","ctx","getContext","chesscolor","step","maparr","mode","i","j","moveTo","lineTo","checkwin","x","y","color","ct","alert","stroke","addEventListener","e","px","Math","floor","offsetX","py","offsetY","AudioContext","fillStyle","beginPath","arc","PI","fill"],"mappings":"+EAeA,IAdA,IAAIA,EAASC,SAASC,cAAc,WAChCC,EAAMH,EAAOI,WAAW,MACxBC,EAAa,CAAC,OAAQ,QACtBC,EAAO,EACPC,EAAS,GACTC,EAAO,CAET,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,GAAI,IAIEC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3BF,EAAOE,GAAK,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtBH,EAAOE,GAAGC,GAAK,EAKnB,IAAKD,EAAI,EAAGA,EAAI,GAAIA,IAGlBN,EAAIQ,OAAO,GAAKF,EAAG,IACnBN,EAAIS,OAAO,GAAQ,KAEnBT,EAAIQ,OAAO,GAAI,GAAKF,GACpBN,EAAIS,OAAO,IAAK,GAAKH,GAoCvB,SAASI,EAASC,EAAGC,EAAGC,EAAOR,GAE7B,IAAIS,EAAK,EACT,IAAKR,EAAI,EAAGA,EAAI,EAAGA,IACjB,GAAIF,EAAOO,EAAIL,EAAID,EAAK,IAAK,CAC3B,GAAID,EAAOO,EAAIL,EAAID,EAAK,IAAIO,EAAIN,EAAID,EAAK,MAAQQ,EAG/C,MAFAC,IAMN,IAAKR,EAAI,EAAGA,EAAI,EAAGA,IAEjB,GAAIF,EAAOO,EAAIL,EAAID,EAAK,IAAK,CAC3B,GAAID,EAAOO,EAAIL,EAAID,EAAK,IAAIO,EAAIN,EAAID,EAAK,MAAQQ,EAG/C,MAFAC,IAOFA,GAAM,GACRC,MAAMF,GAzDVb,EAAIgB,SAYJnB,EAAOoB,iBAAiB,SAAS,SAAUC,GACzC,IAViBP,EAAGC,EAAGC,EAUnBM,EAAKC,KAAKC,OAAOH,EAAEI,QAAU,IAAM,IAAM,EACzCC,EAAKH,KAAKC,OAAOH,EAAEM,QAAU,IAAM,IAAM,EAEhC,IAAVL,EAAK,KAAY,GACN,IAAVI,EAAK,KAAY,EAAiB,IAAVJ,EAAK,KAAY,KAChC,IAAVI,EAAK,KAAY,KAIG,IAAnBnB,EAAOe,GAAII,KAnBEZ,EAoBM,IAAVQ,EAAK,GApBEP,EAoBkB,IAAVW,EAAK,GApBVV,EAoBmBX,EAAWC,EAAO,GAlB5DsB,aAAaC,UAAYb,EACzBY,aAAaE,YACbF,aAAaG,IAAIjB,EAAGC,EAAG,GAAI,EAAa,EAAVQ,KAAKS,IAAQ,GAC3CJ,aAAaK,OACbL,aAAaT,SAeXZ,EAAOe,GAAII,GAAMrB,EAAWC,EAAO,GACnCO,EAASS,EAAII,EAAIrB,EAAWC,EAAO,GAAIE,EAAK,IAC5CK,EAASS,EAAII,EAAIrB,EAAWC,EAAO,GAAIE,EAAK,IAC5CK,EAASS,EAAII,EAAIrB,EAAWC,EAAO,GAAIE,EAAK,IAC5CK,EAASS,EAAII,EAAIrB,EAAWC,EAAO,GAAIE,EAAK,IAC5CF,U","file":"static/js/main.fe5b7004.chunk.js","sourcesContent":["\r\nvar canvas = document.querySelector('#canvas')\r\nvar ctx = canvas.getContext('2d'); // get cnavas\r\nvar chesscolor = ['#000', '#fff'] // define black/white pawn\r\nvar step = 0 // steps\r\nvar maparr = [] // status of canvas/board\r\nvar mode = [\r\n  // check mode\r\n  [1, 0], // horiz\r\n  [0, 1], // vertical\r\n  [1, 1], // right bot, left top\r\n  [1, -1], // right top, left bot\r\n]\r\n\r\n// record board\r\nfor (var i = 0; i < 14; i++) {\r\n  maparr[i] = []\r\n  for (var j = 0; j < 14; j++) {\r\n    maparr[i][j] = 0\r\n  }\r\n}\r\n\r\n// board\r\nfor (i = 1; i < 15; i++) {\r\n  //loop for 15 lines\r\n  // |\r\n  ctx.moveTo(30 * i, 30)\r\n  ctx.lineTo(30 * 1, 420)\r\n  // ___\r\n  ctx.moveTo(30, 30 * i)\r\n  ctx.lineTo(420, 30 * i)\r\n}\r\n\r\nctx.stroke() // edge\r\n\r\n// pawn\r\nfunction drawchess(x, y, color) {\r\n  // darw one pawn\r\n  AudioContext.fillStyle = color\r\n  AudioContext.beginPath()\r\n  AudioContext.arc(x, y, 15, 0, Math.PI * 2, false) // shape\r\n  AudioContext.fill() // fill color\r\n  AudioContext.stroke()\r\n}\r\n\r\ncanvas.addEventListener('click', function (e) {\r\n  var px = Math.floor((e.offsetX + 15) / 30) - 1\r\n  var py = Math.floor((e.offsetY + 15) / 30) - 1\r\n  if (\r\n    (px + 1) * 30 === 0 ||\r\n    ((py + 1) * 30 === 0) | ((px + 1) * 30 === 450) ||\r\n    (py + 1) * 30 === 450\r\n  ) {\r\n    return\r\n  }\r\n  if (maparr[px][py] === 0) {\r\n    drawchess((px + 1) * 30, (py + 1) * 30, chesscolor[step % 2])\r\n    maparr[px][py] = chesscolor[step % 2]\r\n    checkwin(px, py, chesscolor[step % 2], mode[0])\r\n    checkwin(px, py, chesscolor[step % 2], mode[1])\r\n    checkwin(px, py, chesscolor[step % 2], mode[2])\r\n    checkwin(px, py, chesscolor[step % 2], mode[3])\r\n    step++\r\n  }\r\n})\r\n\r\nfunction checkwin(x, y, color, mode) {\r\n  // right\r\n  var ct = 0\r\n  for (i = 1; i < 5; i++) {\r\n    if (maparr[x + i * mode[0]]) {\r\n      if (maparr[x + i * mode[0]][y + i * mode[1]] === color) {\r\n        ct++\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n  for (i = 1; i < 5; i++) {\r\n    //left\r\n    if (maparr[x - i * mode[0]]) {\r\n      if (maparr[x - i * mode[0]][y - i * mode[1]] === color) {\r\n        ct++\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  if (ct >= 4) {\r\n    alert(color)\r\n  }\r\n}\r\n"],"sourceRoot":""}